/**
 * Font style module
 * Defines types to be used to store and define fonts.
 * 
 * Bitmap font C files generated by bmfont2c.py 
 * http://larsee.dk/converting-fonts-to-c-source-using-bmfont2c/
 * 
 * Fonts from Google Fonts
 * https://github.com/google/fonts
 * 
 * Icons from OpenIconic
 * https://github.com/iconic/open-iconic
 */


#ifndef FONT_H_
#define FONT_H_

#include <stdint.h>

#include "ugui/types.h"

//Struct encapsulating a font style
//TODO: this seemingly has to be public to allow fonts to be instantiated
//maybe there is a better way here
struct font_style_s
{
    uint8_t glyph_count;
    uint8_t first_ascii_code;
    uint8_t glyph_width_bytes;
    uint8_t glyph_height;
    uint8_t fixed_width;
    uint8_t const *glyph_width;
    uint8_t const *glyph_bitmaps;
};

typedef struct font_style_s font_style_t;

int ugui_font_get_text_size(font_style_t *font, char *c, ugui_size_t* size);

int _ugui_font_get_glyph(font_style_t *font, char c, ugui_sprite_t* glyph);

extern font_style_t font_robotomono_regular_16;
extern font_style_t font_robotomono_regular_18;
extern font_style_t font_robotomono_regular_24;
extern font_style_t font_robotomono_regular_32;

#endif
